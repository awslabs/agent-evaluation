# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

import logging
from datetime import datetime

logger = logging.getLogger(__name__)


def log_run_start(verbose: bool, num_tests: int, num_threads: int):
    logger.info(f"Starting run with {num_tests} test(s)...")
    if verbose:
        logger.info(f"Number of threads: {num_threads}")


def log_run_end(
    verbose: bool,
    tests: list,
    num_tests: int,
    pass_count: int,
    run_start_time: datetime,
    run_end_time: datetime,
    evaluator_input_token_count: int,
    evaluator_output_token_count: int,
):
    fail_count = num_tests - pass_count

    if fail_count:
        logger.error(f"[red]{pass_count} passed, {fail_count} failed.")
    else:
        logger.info(f"[green]{num_tests} passed.")

    logger.info(
        f"Completed in {round((run_end_time - run_start_time).total_seconds(), 2)} seconds."
    )

    if verbose:
        for t in tests:
            if t.test_result.passed:
                logger.info(f"[bold green]{t.name}...PASSED")
            else:
                logger.error(f"[bold red]{t.name}...FAILED")
        logger.info(
            f"Input tokens processed by evaluator: {evaluator_input_token_count}"
        )
        logger.info(
            f"Output tokens generated by evaluator: {evaluator_output_token_count}"
        )
